#include<bits/stdc++.h>
using namespace std;

const int N = 1e6 + 4;
string s;

int Prio(char s) {
    if (s == '*' || s == '/') return 2;
    if (s == '+' || s == '-') return 1;
    return 0;
}

vector<string> convert(string s) {
    stack<char> st;
    vector<string> ans;
    string num = "";

    for (int i = 0; i < s.length(); ++i) {
        if (s[i] >= '0' && s[i] <= '9') num = num + s[i];
        else {
            if (num != "") { ans.push_back(num); num = ""; }

            if (s[i] == '(') st.push(s[i]);
            else if (s[i] == ')') {
                while (st.size() && st.top() != '(') {
                    ans.push_back({st.top()});
                    st.pop();
                }
                st.pop();
            }
            else {
                while (st.size() && Prio(st.top()) >= Prio(s[i])) {
                    ans.push_back({st.top()});
                    st.pop();
                }
                st.push(s[i]);
            }
        }
    }

    if (num != s) ans.push_back(num);
    while (st.size()) { ans.push_back({st.top()}); st.pop(); }

    return ans;
}

int Num(string s) {
    int res = 0;
    for (int i = 0; i < s.length(); ++i) {
        res = res * 10 + s[i] - '0';
    }
    return res;
}

stack<int> st;
int calc(vector<string> s) {
    for (int i = 0; i < s.size(); ++i) {
        if (s[i] != "+" && s[i] != "-" && s[i] != "*") {
            st.push(Num(s[i]));
        }
        else {
            int tmp1 = st.top(); st.pop();
            int tmp2 = st.top(); st.pop();

            if (s[i] == "+") st.push(tmp1 + tmp2);
            else if (s[i] == "-") st.push(tmp2 - tmp1);
            else st.push(tmp1 * tmp2);
        }
    }

    return st.top();
}

void solve() {
    vector<string> Post = convert(s);

    cout << calc(Post);
}

int main() {
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    freopen("nhap.inp", "r", stdin);
    freopen("nhap.out", "w", stdout);

    cin >> s;

    solve();

    return 0;
}
